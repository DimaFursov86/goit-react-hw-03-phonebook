{"version":3,"sources":["components/Section/Section.module.scss","components/ContactList/ContactList.module.scss","components/Filter/Filter.module.scss","App.module.scss","components/ContactForm/ContactForm.module.scss","components/ContactItem/ContactItem.module.scss","components/Section/Section.js","components/ContactForm/ContactForm.js","components/ContactItem/ContactItem.js","components/ContactList/ContactList.js","components/Filter/Filter.js","App.js","index.js"],"names":["module","exports","Section","children","className","s","section","Form","state","name","number","handleChange","e","currentTarget","value","setState","handleSubmit","preventDefault","props","onSubmit","reset","formContact","this","contactFormItem","type","onChange","pattern","title","required","formButton","Component","ContactItem","id","onDeleteContact","contactItem","contactItemText","onClick","ContactList","contacts","contactList","map","Filter","filterBox","App","filter","addContact","getVisibleContacts","obj","includes","alert","contact","shortid","generate","deleteContact","contactId","prevState","changeFilter","normalizedFilter","toLowerCase","localStorage","getItem","parsedContacts","JSON","parse","prevProps","setItem","stringify","visibleContacts","box","ContactForm","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.710f5dce.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"section\":\"Section_section__ZD9MD\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"contactList\":\"ContactList_contactList__1wq6J\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"filterBox\":\"Filter_filterBox__2YfGG\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"box\":\"App_box__1MWQV\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"formContact\":\"ContactForm_formContact__37Iq7\",\"contactFormItem\":\"ContactForm_contactFormItem__zrP0T\",\"formButton\":\"ContactForm_formButton__qxJAk\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"contactItem\":\"ContactItem_contactItem__2Jn6U\",\"contactItemText\":\"ContactItem_contactItemText__Zwq7H\"};","import s from \"../Section/Section.module.scss\";\nexport default function Section({ children }) {\n  return <div className={s.section}>{children}</div>;\n}\n","import React, { Component } from \"react\";\nimport s from \"./ContactForm.module.scss\";\n\nclass Form extends Component {\n  state = {\n    name: \"\",\n    number: \"\",\n  };\n\n  handleChange = (e) => {\n    const { name, value } = e.currentTarget;\n\n    this.setState({ [name]: value });\n  };\n\n  handleSubmit = (e) => {\n    e.preventDefault();\n\n    this.props.onSubmit(this.state);\n\n    this.reset();\n  };\n\n  reset = () => {\n    this.setState({ name: \"\", number: \"\" });\n  };\n\n  render() {\n    return (\n      <form className={s.formContact} onSubmit={this.handleSubmit}>\n        <label className={s.contactFormItem}>\n          Name\n          <input\n            type=\"text\"\n            name=\"name\"\n            value={this.state.name}\n            onChange={this.handleChange}\n            pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n            title=\"Имя может состоять только из букв, апострофа, тире и пробелов. Например Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan и т. п.\"\n            required\n          />\n        </label>\n        <br />\n        <label className={s.contactFormItem}>\n          Number\n          <input\n            type=\"tel\"\n            name=\"number\"\n            value={this.state.number}\n            onChange={this.handleChange}\n            pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\n            title=\"Номер телефона должен состоять цифр и может содержать пробелы, тире, круглые скобки и может начинаться с +\"\n            required\n          />\n        </label>\n\n        <button className={s.formButton} type=\"submit\">\n          Add contact\n        </button>\n      </form>\n    );\n  }\n}\n\nexport default Form;\n","import s from \"./ContactItem.module.scss\";\nimport PropTypes from \"prop-types\";\nexport default function ContactItem({ id, name, number, onDeleteContact }) {\n  return (\n    <div className={s.contactItem}>\n      <p className={s.contactItemText}>{name}</p>\n      <p className={s.contactItemText}>{number}</p>\n      <button\n        type=\"button\"\n        className={s.contactItemText}\n        onClick={() => onDeleteContact(id)}\n      >\n        Delete\n      </button>\n    </div>\n  );\n}\nContactItem.propTypes = {\n  id: PropTypes.string.isRequired,\n  name: PropTypes.string.isRequired,\n  number: PropTypes.string.isRequired,\n  onDeleteContact: PropTypes.func.isRequired,\n};\n","import s from \"./ContactList.module.scss\";\nimport ContactItem from \"../ContactItem\";\nimport PropTypes from \"prop-types\";\nexport default function ContactList({ contacts, onDeleteContact }) {\n  return (\n    <ul className={s.contactList}>\n      {contacts.map(({ id, name, number }) => (\n        <li key={id}>\n          <ContactItem\n            id={id}\n            name={name}\n            number={number}\n            onDeleteContact={onDeleteContact}\n          />\n        </li>\n      ))}\n    </ul>\n  );\n}\nContactList.propTypes = {\n  contacts: PropTypes.arrayOf(PropTypes.shape).isRequired,\n  onDeleteContact: PropTypes.func.isRequired,\n};\n","import React from \"react\";\nimport s from \"./Filter.module.scss\";\nimport PropTypes from \"prop-types\";\nconst Filter = ({ value, onChange }) => (\n  <label className={s.filterBox}>\n    Find contacts by name\n    <input type=\"text\" value={value} onChange={onChange} />\n  </label>\n);\n\nexport default Filter;\nFilter.propTypes = {\n  value: PropTypes.string.isRequired,\n  onChange: PropTypes.func.isRequired,\n};\n","import React, { Component } from \"react\";\nimport shortid from \"shortid\";\nimport Section from \"./components/Section\";\nimport ContactForm from \"./components/ContactForm\";\nimport ContactList from \"./components/ContactList\";\nimport Filter from \"./components/Filter\";\nimport contacts from \"./contacts.json\";\nimport s from \"./App.module.scss\";\n\nclass App extends Component {\n  state = {\n    contacts: contacts,\n    filter: \"\",\n  };\n  componentDidMount() {\n    const contacts = localStorage.getItem(\"contacts\");\n    const parsedContacts = JSON.parse(contacts);\n    this.setState({ contacts: parsedContacts });\n  }\n  componentDidUpdate(prevProps, prevState) {\n    if (this.state.contacts !== prevState.contacts) {\n      localStorage.setItem(\"contacts\", JSON.stringify(this.state.contacts));\n    }\n  }\n  addContact = ({ name, number }) => {\n    const nameArr = this.getVisibleContacts();\n    const existName = nameArr.map((obj) => obj.name);\n    if (existName.includes(name)) {\n      alert(`${name} is already in contacts`);\n    } else {\n      const contact = {\n        id: shortid.generate(),\n        name,\n        number,\n      };\n\n      this.setState(({ contacts }) => ({\n        contacts: [contact, ...contacts],\n      }));\n    }\n  };\n\n  deleteContact = (contactId) => {\n    this.setState((prevState) => ({\n      contacts: prevState.contacts.filter(\n        (contact) => contact.id !== contactId\n      ),\n    }));\n  };\n\n  changeFilter = (e) => {\n    this.setState({ filter: e.currentTarget.value });\n  };\n\n  getVisibleContacts = () => {\n    const { filter, contacts } = this.state;\n    const normalizedFilter = filter.toLowerCase();\n\n    return contacts.filter((contact) =>\n      contact.name.toLowerCase().includes(normalizedFilter)\n    );\n  };\n\n  render() {\n    const { filter } = this.state;\n    const visibleContacts = this.getVisibleContacts();\n\n    return (\n      <Section>\n        <div className={s.box}>\n          <h1>Phonebook</h1>\n          <ContactForm onSubmit={this.addContact} />\n\n          <h2>Contacts</h2>\n          <Filter value={filter} onChange={this.changeFilter} />\n          <ContactList\n            contacts={visibleContacts}\n            onDeleteContact={this.deleteContact}\n          />\n        </div>\n      </Section>\n    );\n  }\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport \"modern-normalize/modern-normalize.css\";\n// import reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\n// reportWebVitals();\n"],"sourceRoot":""}